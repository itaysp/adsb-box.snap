diff --git a/package/fa_piaware_config.tcl b/package/fa_piaware_config.tcl
index fa0828d..31bc6f7 100644
--- a/package/fa_piaware_config.tcl
+++ b/package/fa_piaware_config.tcl
@@ -418,7 +418,7 @@ namespace eval ::fa_piaware_config {
 				set f [open $temppath "w" [expr {$fpstat(mode) & 0777}]]
 
 				# fix the ownership to match the old file
-				chown -fileid [list $fpstat(uid) $fpstat(gid)] $f
+				#chown -fileid [list $fpstat(uid) $fpstat(gid)] $f
 			}
 
 			# write the new data
@@ -936,22 +936,22 @@ namespace eval ::fa_piaware_config {
 	#
 	#  priority 100+:     any extra config file given as an argument (readonly)
 	#  priority 100+:     any config files found in /media/usb/*/piaware-config.txt, ordered arbitrarily (readonly)
-	#  priority 50:       /boot/piaware-config.txt (readwrite)
-	#  priority 40:       /etc/piaware.conf (readwrite)
-	#  priority 30:       /usr/share/piaware-support/piaware-image-config.txt (readonly) (provides additional defaults on PiAware sdcard images)
+	#  priority 50:       $SNAP_DATA/piaware.conf (readwrite)
+	#  priority 40:       $SNAP/etc/piaware.conf (readonly)
+	#  priority 30:       $SNAP/usr/share/piaware-support/piaware-image-config.txt (readonly) (provides additional defaults on PiAware sdcard images)
 	#
-	# which means that in general changes will be written to /etc/piaware.conf where possible, or
-	# /boot/piaware-config.txt if the setting was set there.
+	# which means that in general changes will be written to $SNAP_DATA/piaware.conf where possible
 	#
 	# Provide a itcl name pattern (e.g. #auto) as "name"
 	proc piaware_combined_config {name {extraConfigFile ""}} {
 		set metadata [piaware_standard_settings #auto]
 		set combined [uplevel 1 ::fa_piaware_config::new ::fa_piaware_config::ConfigGroup $name -metadata $metadata]
 
-		$combined add [new ConfigFile #auto -filename "/usr/share/piaware-support/piaware-image-config.txt" -metadata $metadata -priority 30 -readonly 1]
-		$combined add [new ConfigFile #auto -filename "/etc/piaware.conf" -metadata $metadata -priority 40 -writeHelper $::fa_piaware_config::helperPath]
+		$combined add [new ConfigFile #auto -filename "$::env(SNAP)/usr/share/piaware-support/piaware-image-config.txt" -metadata $metadata -priority 30 -readonly 1]
+		$combined add [new ConfigFile #auto -filename "$::env(SNAP)/etc/piaware.conf" -metadata $metadata -priority 40 -readonly 1]
 
 		$combined add [new ConfigFile #auto -filename "/boot/piaware-config.txt" -metadata $metadata -priority 50 -writeHelper $::fa_piaware_config::helperPath -eol crlf]
+		$combined add [new ConfigFile #auto -filename "$::env(SNAP_DATA)/piaware.conf" -metadata $metadata -priority 50 -writeHelper $::fa_piaware_config::helperPath -eol crlf]
 
 		set prio 100
 		foreach f [lsort [glob -nocomplain -types f "/media/usb/*/piaware-config.txt"]] {
diff --git a/programs/piaware/faup1090.tcl b/programs/piaware/faup1090.tcl
index dc979a4..04777a3 100644
--- a/programs/piaware/faup1090.tcl
+++ b/programs/piaware/faup1090.tcl
@@ -33,7 +33,11 @@ proc setup_faup1090_vars {} {
 	set ::adsbDataProgram [receiver_description piawareConfig]
 
 	# path to faup1090
-	set path "/usr/lib/piaware/helpers/faup1090"
+	if {[info exists ::env(SNAP)]} {
+		set path "$::env(SNAP)/usr/lib/piaware/helpers/faup1090"
+	} else {
+		set path "/usr/lib/piaware/helpers/faup1090"
+	}
 	if {[set ::faup1090Path [auto_execok $path]] eq ""} {
 		logger "No faup1090 found at $path, cannot continue"
 		exit 1
diff --git a/programs/piaware/mlat.tcl b/programs/piaware/mlat.tcl
index c511c60..eadd04c 100644
--- a/programs/piaware/mlat.tcl
+++ b/programs/piaware/mlat.tcl
@@ -15,7 +15,11 @@ set ::mlatRestartMillis 60000
 # UDP transport info
 set ::mlatUdpTransport {}
 # path to fa-mlat-client
-set ::mlatClientPath [auto_execok "/usr/lib/piaware/helpers/fa-mlat-client"]
+if {[info exists ::env(SNAP)]} {
+	set ::mlatClientPath [auto_execok "$::env(SNAP)/usr/lib/piaware/helpers/fa-mlat-client"]
+} else {
+	set ::mlatClientPath [auto_execok "/usr/lib/piaware/helpers/fa-mlat-client"]
+}
 # current mlat status for the statusfile, one of:
 #   not_enabled
 #   not_running
diff --git a/programs/piaware-config/main.tcl b/programs/piaware-config/main.tcl
index 388b957..61b4968 100644
--- a/programs/piaware-config/main.tcl
+++ b/programs/piaware-config/main.tcl
@@ -19,7 +19,7 @@ source $::launchdir/helpers.tcl
 package require cmdline
 package require Tclx
 
-set pidFile "/var/run/piaware.pid"
+set pidFile "$::env(SNAP_DATA)/piaware.pid"
 
 #
 # main - the main program
diff --git a/package/piaware.tcl b/package/piaware.tcl
index 2a16fef..e65b5f0 100644
--- a/package/piaware.tcl
+++ b/package/piaware.tcl
@@ -11,7 +11,11 @@ package require Itcl
 package require tryfinallyshim
 package require fa_sudo
 
-set piawarePidFile /var/run/piaware.pid
+if {[info exists ::env(SNAP_DATA)]} {
+	set piawarePidFile $::env(SNAP_DATA)/piaware.pid
+} else {
+	set piawarePidFile /var/run/piaware.pid
+}
 set piawareConfigFile /etc/piaware
 
 #
diff --git a/package/fa_sudo.tcl b/package/fa_sudo.tcl
index 9d97095..bfec0ff 100644
--- a/package/fa_sudo.tcl
+++ b/package/fa_sudo.tcl
@@ -42,6 +42,11 @@ namespace eval ::fa_sudo {
 	}
 
 	proc _make_droproot_args {user argv0 args} {
+		# do not droproot when snapped
+		if {[info exists ::env(SNAP)]} {
+			return [list {*}$args]
+		}
+
 		# try a few different things to drop root
 		set path [auto_execok $::fa_sudo::dropRootHelper]
 		if {$path ne ""} {
